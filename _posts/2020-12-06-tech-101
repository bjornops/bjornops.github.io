---
title: "Tech 101"
categories:
  - Blog
  - Tech
tags:
  - Post Formats
  - Tech101
---

# Tech 101

Okay, so you want to get into tech, but don't know where to begin? Let's start here!

We'll dig into details later.

## The Great (Over)view

There are so many categories, domains and properties involved in delivering a digital experience, so we'll start real coarse, using an example right in front of you.
This article.

You're probably reading this on a computer or a phone. Nice. However, this text was not on your device only a short time ago.
Somewhere, this text is stored only to be served and displayed once in a while, and this journey can be long, especially describing each technology involved at each step along the way.

Luckily, I've already described most of the steps, hopefully without you noticing.

> *Somewhere, this text is stored only to be served and displayed once in a while*

And only to highlight the three main steps: `store`, `serve` and `display`.

Now, pack your stuff and take the rest of the day of. You've earned it. Really.
This does actually describe almost every single application.
The ATM, online news, arcade machines.

Putting this into terms you've heard, but not necessarily understood: `storage`, `backend`, `frontend`.
These are traditionally called layers.

Let's follow up with some details!

## Squinting

### Frontend

Frontend is the presentation layer and takes care of your interaction experience, including parts as buttons, text, layout, images, background.

This can be split into two main categories: functionality and design. Now, we all know what bad design is (having used any dog breeder website from 2005 - or something evil like  https://userinyerface.com), but we're busy with tech, so we'll disregard that part in this article.

Functionality is the stuff that we interact with or performs actions, such as buttons, links, text input, etc.
These are typically visual cues and can be supported by audio as well.
The structure of the application is also a big part of the functionality.
It's up to the frontend developer that you go to the previous page when you press "back", the phone screen flashes white when you take a picture, or that all your products are displayed in your shopping cart.

However, it would be an empty shell without anything to display.

### Backend

The backend is your dealer. Serving you your stuff, and in web applications hosted on an appropriately called server.
This category also has many parts, bells and whistles.

This application, like the frontend, awaits interaction.
However, not from the user themselves, but from the frontend application.
The frontend says whether it would like to give something (a job application form) or get something (your bank amount).
And as you've already experienced, it's able to deliver.
But with great power, comes great responsibility.

The backend must be able to handle the load of all the applications asking for data, responding in a reasonable amount of time.
As if that isn't enough, it also must consider who is asking for what data. Giving out sensitive information to the wrong person can have serious consequences.
Additionally, it should withstand maliciuous users providing misformed requests trying to exploit potential vulnerabilities.

With that said, the backend application doesn't store data within itself.

### Storage

The storage layer, well, stores data.
Simple enough until you consider the many use cases of data.

What kind of data plays a big difference.
Netflix storing a movie probably differs from a bank storing transactions, right?
My guess is that you've experienced the difference yourself, having a folder on your PC for movies and using some spreadsheet for your budget.
One is rather important and the other could be deleted without any major consequences (despite some inconvenience).

The access time for the information is also relevant - data that is accessed often, probably needs to be quicker to fetch.
And vice versa: Backups are many times okay that take a day to get.

As users of a service, however, we would not be satisfied with a login time of minutes.

Therefore, we have different data storage mediums, such as SSDs, harddisks and tape - each slower than the former.
Additionally, there are different methods to store data such as tables (just like your spreadsheets with a single piece of information in each cell) or documents that store chunks of data.

Now, how about that break? We'll look at more tech stuff in the tech-102 article soon ðŸ¤“
